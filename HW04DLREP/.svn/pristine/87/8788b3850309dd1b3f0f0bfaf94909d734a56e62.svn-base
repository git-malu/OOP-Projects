package model.strategy;

import java.awt.Graphics;
import java.awt.geom.AffineTransform;

import model.Ball;

public abstract class APaintStrategy implements IPaintStrategy{
	protected AffineTransform at = new AffineTransform();
	
	//constructor
	public APaintStrategy(AffineTransform at_set) {
		at = at_set;
	}
	
	
	protected AffineTransform getAT() {
		return at;
	}
	
	protected void paintCfg(Graphics g, Ball host) {
		
	}
	
	abstract void paintXfrm(Graphics g, Ball host, AffineTransform at);
	
	@Override
	public void init(Ball host) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void paint(Graphics g, Ball host) {
		// TODO Auto-generated method stub
		double scale = host.getRadius();
		//set affine transform
//		at.setToTranslation(-host.getLocation().x, -host.getLocation().y);
//		at.setToTranslation(-host.getRadius(), -host.getRadius());// now centered on the origin point
		
		
		//calculate from down to up
		at.setToTranslation(host.getLocation().x, host.getLocation().y);
		at.rotate(host.getVelocity().x, host.getVelocity().y);
		at.scale(scale, scale);
		//at.setToTranslation(0, 0);//at.setToTranslation(host.getLocation().x, host.getLocation().y);
		//at.scale(1, 1);//at.scale(scale, scale);
		//at.rotate(1, 1);//at.rotate(host.getVelocity().x, host.getVelocity().y);
		
		g.setColor(host.getColor());
		paintCfg(g, host);
		paintXfrm(g, host, at);
	}

}
