package lm44_xw47.model.dataPacketAlgoCmd;

import common.DataPacketUserAlgoCmd;
import common.IUserCmd2ModelAdapter;
import java.util.Collection;
import common.IUser;
import common.IChatRoom;
import lm44_xw47.model.User;
import java.util.Map;
import common.DataPacketUser;

/**
* command client sends to server when clicks ready to play
 *  * */
public class ReadyToPlayCmd extends DataPacketUserAlgoCmd<ReadyToPlayType> {
	private static final long serialVersionUID = 3855853480491340983L;

	private transient IUserCmd2ModelAdapter cmd2ModelAdpt;
	private transient Collection<IUser> users;
	private transient Collection<IUser> readiedUsers;
	private transient Map<IUser, IChatRoom> teamsByUser;
	private transient IUser server;
	private transient User serverHost;

	@Override
	public void setCmd2ModelAdpt(IUserCmd2ModelAdapter cmd2ModelAdpt) {
		this.cmd2ModelAdpt = cmd2ModelAdpt;
	}

	public ReadyToPlayCmd(IUserCmd2ModelAdapter cmd2ModelAdpt, Collection<IUser> users, Collection<IUser> readiedUsers,
			Map<IUser, IChatRoom> teamsByUser, IUser server, User serverHost) {
		this.cmd2ModelAdpt = cmd2ModelAdpt;
		this.users = users;
		this.readiedUsers = readiedUsers;
		this.teamsByUser = teamsByUser;
		this.server = server;
		this.serverHost = serverHost;
	}

	@Override
	public String apply(Class<?> index, DataPacketUser<ReadyToPlayType> host, String... params) {
		IUser sender = host.getSender();
		if (!teamsByUser.containsKey(sender)) {
			return "";
		}

		readiedUsers.add(sender);
		if (readiedUsers.size() == users.size()) {
			cmd2ModelAdpt.appendMsg("Game Start. \n", "System: ");
			serverHost.start();
			for (IUser player : users) {
				System.out.println("send game.");
				new Thread() {
					public void run() {
						try {
							player.receive(new DataPacketUser<InstallGameType>(InstallGameType.class,
									new InstallGameType(users, teamsByUser, server, player), server));
						} catch (RemoteException e) {
							e.printStackTrace();
						}
					}
				}.start();
			}
		}
		return "";
	}
}
