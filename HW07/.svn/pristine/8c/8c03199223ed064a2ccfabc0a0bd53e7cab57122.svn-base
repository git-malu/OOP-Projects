package client.clientModel.task;

import java.rmi.RemoteException;

import provided.client.model.taskUtils.ITaskFactory;
import provided.compute.ILocalTaskViewAdapter;
import provided.compute.ITask;
import provided.compute.ITaskResultFormatter;

public class PalinNum implements ITask<Boolean> {

	/**
	 * SerialversionUID for well-defined serialization.
	 */
	private static final long serialVersionUID = -1051597561114402742L;

	/**
	 * Adapter to the local view. Marked "transient" so that it is not serialized
	 * and instead is re-attached at the destination (the server).
	 */
	private transient ILocalTaskViewAdapter taskView = ILocalTaskViewAdapter.DEFAULT_ADAPTER;	

	/**
	 * digits of precision after the decimal point
	 */
	private final int number;

	public PalinNum(int number) {
		// TODO Auto-generated constructor stub
		this.number = number;
		taskView.append("PalinNum constructing...");
	}
	
	private boolean isPalindrome(int x) {
        if(x < 0) {
            return false;
        }
        return x == reverse(x);  		
	}
	
    private int reverse(int x) {
        int rst = 0;
        while(x != 0) {
            rst = rst * 10 + x % 10;
            x = x / 10;
        }
        return rst;
    }
	
	@Override
	public Boolean execute() throws RemoteException {
		// TODO Auto-generated method stub
		taskView.append("PalinNum task called with input = " + number + "\n");
		return isPalindrome(number);
	}
	
	@Override
	public void setTaskViewAdapter(ILocalTaskViewAdapter viewAdapter) {
		// TODO Auto-generated method stub
		taskView = viewAdapter;
		viewAdapter.append("PalinNum task installed!\n");		
	}

	@Override
	public ITaskResultFormatter<Boolean> getFormatter() {
		// TODO Auto-generated method stub
		return new ITaskResultFormatter<Boolean>() {
			public String format(Boolean result) {
				return "Is Palindrome: " + result + "  (input = " + number + ")";
			}
		};
	}
	
	/**
	 * An ITaskFactory for this task
	 */
	public static final ITaskFactory<Boolean> FACTORY = new ITaskFactory<Boolean>() {

		@Override
		public ITask<Boolean> make(String param) {
			return new PalinNum(Integer.parseInt(param));
		}
		
		@Override
		public String toString() {
			return PalinNum.class.getName();
		}
		
	};		

}
