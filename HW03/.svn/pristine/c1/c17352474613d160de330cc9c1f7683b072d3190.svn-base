package view;

import java.awt.*;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import model.IStrategyFac;

import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;
import javax.swing.JList;
import javax.swing.JComboBox;

/**
 * class MainFrame, containerï¼ŒUsed to add other components
 * @author guoqz
 */
public class MainFrame<TDropListItem> extends JFrame {

	/**
	 * Maintain version compatibility
	 */
	private static final long serialVersionUID = -6787198012587971808L;
	private JPanel contentPane; //contain all components
	private Rectangle bounds; //bounds of canvas
	private final JPanel north_panel = new JPanel(); //edit text here
	private final JButton make_ball = new JButton("Make Ball"); //press the button will make a new ball with type on text
	private final JButton clean_balls = new JButton("Clean Balls"); //press the button will clean all balls on canvas
	// The view adapter is initialized to a no-op to insure that system always has well-defined behavior
	private IView2ModelAdapterCtrl _view2ModelAdptCtrl = IView2ModelAdapterCtrl.NULL_OBJECT;
	private IView2ModelAdapterPaint _view2ModelAdptPaint = IView2ModelAdapterPaint.NULL_OBJECT;

	// Create a special panel with an overridden paintComponent method.
	private final JPanel center_panel = new JPanel() {
		/**
		 * Maintain version compatibility
		 */
		private static final long serialVersionUID = -872444218515942499L;

		@Override
		public void paintComponent(Graphics g) {
			super.paintComponent(g);
			//bounds = g.getClipBounds();

			//_view2ModelAdptPaint.getBounds(bounds);
			_view2ModelAdptPaint.paint(g);// give the g to model, let model do the painting on g.
		}
	};
	private final JComboBox<TDropListItem> dropList2 = new JComboBox<TDropListItem>();
	private final JComboBox<TDropListItem> dropList1 = new JComboBox<TDropListItem>();
	private final JPanel panel = new JPanel();
	private final JPanel panel_1 = new JPanel();
	private final JPanel panel_2 = new JPanel();
	private final JButton makeFacButt = new JButton("Add to list");
	private final JTextField facName = new JTextField();
	private final JButton btnCombine = new JButton("Combine");
	private final JPanel panel_3 = new JPanel();
	private final JButton switchStra = new JButton("switch strategy");
	private final JButton btnMakeswitcher = new JButton("MakeSwitcher");
	
	/**
	 * Constructor is supplied with an instance of the model adapter.
	 * @param view2ModelAdpt
	 */
	public MainFrame(IView2ModelAdapterCtrl view2ModelAdptCtrl, IView2ModelAdapterPaint view2ModelAdptPaint) {
		facName.setText("fac name here");
		facName.setColumns(10);
		_view2ModelAdptCtrl = view2ModelAdptCtrl;
		_view2ModelAdptPaint = view2ModelAdptPaint;
		initGUI();
	}

	/**
	 * start
	 */
	public void start() {
		setVisible(true);

	}

	/**
	 * Updates the view by repainting the canvas
	 */
	public void viewRepaint() {
		center_panel.repaint();
	}
	
	//an ArrayList of factories is passed here
	public void dropListUpdate(ArrayList<TDropListItem> list) {
		dropList1.removeAllItems();
		dropList2.removeAllItems();
		//ArrayList<TDropListItem> facList = (ArrayList) list;
		for(TDropListItem item : list) {
			dropList1.addItem(item);
			dropList2.addItem(item);
		}
	}
	

	//initialize GUI, add all sorts of components
	private void initGUI() {
		//auto generated code
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 608, 617);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		
		north_panel.setBounds(5, 5, 440, 87);
		
		//not auto generated
		north_panel.setBackground(Color.GREEN);
		north_panel.setToolTipText("put the button and textfield here ");
		
		//auto generated
		contentPane.add(north_panel, BorderLayout.NORTH);
		north_panel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		
		north_panel.add(panel_2);
		panel_2.setLayout(new GridLayout(0, 1, 0, 0));
		
		panel_2.add(facName);
		// the "add to list" button; notify model to make a factory
		makeFacButt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelAdptCtrl.makeFac(facName.getText());
				//System.out.println(facName.getText());
			}
		});
		
		panel_2.add(makeFacButt);
		
		north_panel.add(panel);
		panel.setLayout(new GridLayout(0, 1, 0, 0));
		
		north_panel.add(panel_1);
		panel_1.setLayout(new GridLayout(0, 1, 0, 0));
		panel_1.add(make_ball);
		make_ball.setToolTipText("make a ball");
		

		
		
		//button set up
		make_ball.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				//String temp = ball_shape.getText().toString();
				_view2ModelAdptCtrl.makeBall(dropList1.getSelectedItem());
				
			}
		});
		
//		dropList1.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				_view2ModelAdptCtrl.selectFac(dropList1.getSelectedItem());
//			}
//		});
		
		
		panel_1.add(dropList1);
		panel_1.add(dropList2);
		btnCombine.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelAdptCtrl.combineFac(dropList1.getSelectedItem(), dropList2.getSelectedItem());
			}
		});
		
		panel_1.add(btnCombine);
		
		north_panel.add(panel_3);
		panel_3.setLayout(new GridLayout(0, 1, 0, 0));
		btnMakeswitcher.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelAdptCtrl.makeSwitchBall(dropList1.getSelectedItem());
			}
		});
		
		panel_3.add(btnMakeswitcher);
		switchStra.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				_view2ModelAdptCtrl.switchStra(dropList1.getSelectedItem());
			}
		});
		
		panel_3.add(switchStra);
		panel_3.add(clean_balls);
		clean_balls.setToolTipText("clean all the balls on screen");
		
				clean_balls.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						_view2ModelAdptCtrl.clean();
					}
				});
		center_panel.setBounds(5, 92, 440, 181);
		center_panel.setToolTipText("paint ball here");

		contentPane.add(center_panel);

		center_panel.setBackground(Color.BLACK);
	}
}
