HW04 README.txt
------------------------------------------------
This is a java GUI application to generate and display various ball shapes with selected strategies or the combination of several strategies.



INSTRUCTION
------------------------------------------------
1. Run the Controller.java file under src/controller/ directory to start the GUI.

2. Type in the text field the abbreviate class name of the specific update strategy that you wish the ball to execute.
   Among options are the following:
   
       a. Straight
             A ball with a random color that travels in a straight line at a random velocity. Bounce 
             back when encountering a wall.
             
       b. Breathing
             A ball that changes its size randomly while traveling the same way as a StraightBall does.
             
       c. Color
             A ball that changes its color randomly while traveling the same way as a StraightBall does.
             
       d. Curve
             A ball with a random color that travels in a curve line at a random velocity. Bounce 
             back when encountering a wall.
             
       e. Shake
             A ball with a random color that moves in a sinusoidal pattern. Shake when encountering a wall. 
             
       f. Crazy
             A ball with a random color that moves at a velocity that randomly changes over time.
             
3. Click the "Add to update strategy lists" button add the update strategy into the update strategy drop lists. 

4. Type in the text field the abbreviate class name of the specific paint strategy that you wish the ball to execute.
   Among options are the following:
   
       a. Square
             Paint with a square (the direct implementation of the IPaintStrategy interface).
             
       b. Ellipse
             Paint with an ellipse.
             
       c. Triangle
             Paint with a triangle.
             
       d. UpRightTriangle
             Paint with a triangle that stays upright when bouncing.
       
       e. UpRightArrow
             Paint with a composite arrow that stays upright when bouncing.
             
       f. MyCat
             Paint with my cats' photo.
             
       g. WickedSmile
             Paint with a wicked-smile emoji.
             
       h. SwimFish
             Paint with a swimming fish.

5. Click the "Add to paint strategy lists" button add the paint strategy into the paint strategy drop list. 

4. Select a update strategy from the first drop list as well as a paint strategy from the third drop list, click the "Make Ball" button to 
   create the ball in the window with the selected strategies. For example, if you need to create a wicked-smile emoji executing the 
   Straight strategy, type in "Straight", then click the "Add to update strategy lists" button to add the strategy into the drop list. Then 
   type in "WickedSmile" and click the "Add to paint strategy list" button. Select the Straight update strategy and the WickedSmile paint 
   strategy from the first drop lists and click the "Make Ball" button, and boom!
   (Multiple balls can be displayed at the same time.)
      
6. If you wish to create a ball that can change its update strategy at run time, click the "Make Switcher" button to create a switcher ball. The 
   default update strategy for a switcher ball is Straight strategy.

7. Select any update strategy from the first drop list and click the "Switch!" button to switch the behavior of all the switcher balls into the 
   selected strategy.

8. If you need to combine two existing update strategies into one, select one update strategy from the first drop list and select the other one from the
   second, click the "Combine!" button, and you will see a new composite update strategy with the name "Strategy1-Strategy2" in the drop list.

9. Click the "Clear All" button if you need to clear the balls. This button will also reset the strategy for the switcher balls.



AUTHORS
------------------------------------------------
Yuchang Shen (ys54), Yibing Zhang (yz104), Weiheng Qiu and Lu MA.