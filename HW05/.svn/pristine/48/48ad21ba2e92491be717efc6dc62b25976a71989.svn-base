<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_131) on Tue Oct 03 15:01:20 CDT 2017 -->
<title>BallModel</title>
<meta name="date" content="2017-10-03">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="BallModel";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IBallCmd.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">model</div>
<h2 title="Class BallModel" class="title">Class BallModel</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.BallModel</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="typeNameLabel">BallModel</span>
extends java.lang.Object</pre>
<div class="block">The <code>BallModel</code> class is a mode class under MVC pattern. The
 <code>BallModel</code> is the back-end computations, using to start the
 timer, load balls etc.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Yuchang Shen and Weiheng Qiu
 based on HW02 by Yue Jiang and Yuchang Shen</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../model/strategies/SwitcherStrategy.html" title="class in model.strategies">SwitcherStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#defaultStrategy">defaultStrategy</a></span></code>
<div class="block">Create a default strategy for the switcher balls for the sake of resetting.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../model/BallModel.html#BallModel-model.IModel2ViewUpdateViewAdapter-model.IModel2ViewGetCanvasAdapter-">BallModel</a></span>(<a href="../model/IModel2ViewUpdateViewAdapter.html" title="interface in model">IModel2ViewUpdateViewAdapter</a>&nbsp;iModel2ViewAdapter,
         <a href="../model/IModel2ViewGetCanvasAdapter.html" title="interface in model">IModel2ViewGetCanvasAdapter</a>&nbsp;iModel2ViewGetCanvasAdapter)</code>
<div class="block">Constructs and initializes a BallModel within IModel2ViewAdapter</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#clearBalls--">clearBalls</a></span>()</code>
<div class="block">Clear all the balls from the canvas, delete them from the observers.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#combineStrategyFacs-model.IStrategyFac-model.IStrategyFac-">combineStrategyFacs</a></span>(<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;stratFac1,
                   <a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;stratFac2)</code>
<div class="block">This is the method that creates the factory that can make a strategy which is the combination of 
 two other strategies.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#fixName-java.lang.String-">fixName</a></span>(java.lang.String&nbsp;classname)</code>
<div class="block">A method to transform the abbreviate class name of a strategy to its fully qualified class name.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#fixPaintName-java.lang.String-">fixPaintName</a></span>(java.lang.String&nbsp;className)</code>
<div class="block">A method to transform the abbreviate class name of a paint strategy to its fully qualified class name.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../model/strategies/SwitcherStrategy.html" title="class in model.strategies">SwitcherStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#getSwithcerStrategy--">getSwithcerStrategy</a></span>()</code>
<div class="block">A getter for the current switcher ball strategy.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#loadBall-model.strategies.IUpdateStrategy-model.paint.strategies.IPaintStrategy-">loadBall</a></span>(<a href="../model/strategies/IUpdateStrategy.html" title="interface in model.strategies">IUpdateStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;strategy,
        <a href="../model/paint/strategies/IPaintStrategy.html" title="interface in model.paint.strategies">IPaintStrategy</a>&nbsp;paintStrat)</code>
<div class="block">The following method load a Ball object into the dispatcher with a selected strategy.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../model/IPaintStrategyFac.html" title="interface in model">IPaintStrategyFac</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#makePaintStratFac-java.lang.String-">makePaintStratFac</a></span>(java.lang.String&nbsp;className)</code>
<div class="block">This is the method that creates the factory that is able to generate make a paint strategy with the 
 designated strategy class name.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#makeStrategyFac-java.lang.String-">makeStrategyFac</a></span>(java.lang.String&nbsp;className)</code>
<div class="block">This is the method that creates the factory that is able to generate make a strategy with the 
 designated strategy class name.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#start--">start</a></span>()</code>
<div class="block">start the timer</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#switchSwitcherStrategy-model.strategies.IUpdateStrategy-">switchSwitcherStrategy</a></span>(<a href="../model/strategies/IUpdateStrategy.html" title="interface in model.strategies">IUpdateStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;strategy)</code>
<div class="block">A method to switch the strategy of all existing switcher balls.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../model/BallModel.html#update-java.awt.Graphics-">update</a></span>(java.awt.Graphics&nbsp;g)</code>
<div class="block">This is the method that is called by the view's adapter to the model, i.e.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="defaultStrategy">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>defaultStrategy</h4>
<pre>public final&nbsp;<a href="../model/strategies/SwitcherStrategy.html" title="class in model.strategies">SwitcherStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt; defaultStrategy</pre>
<div class="block">Create a default strategy for the switcher balls for the sake of resetting.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="BallModel-model.IModel2ViewUpdateViewAdapter-model.IModel2ViewGetCanvasAdapter-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BallModel</h4>
<pre>public&nbsp;BallModel(<a href="../model/IModel2ViewUpdateViewAdapter.html" title="interface in model">IModel2ViewUpdateViewAdapter</a>&nbsp;iModel2ViewAdapter,
                 <a href="../model/IModel2ViewGetCanvasAdapter.html" title="interface in model">IModel2ViewGetCanvasAdapter</a>&nbsp;iModel2ViewGetCanvasAdapter)</pre>
<div class="block">Constructs and initializes a BallModel within IModel2ViewAdapter</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>iModel2ViewAdapter</code> - Interface IModel2ViewAdapter</dd>
<dd><code>iModel2ViewGetCanvasAdapter</code> - Interface IModel2ViewGetCanvasAdapter</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="start--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>start</h4>
<pre>public&nbsp;void&nbsp;start()</pre>
<div class="block">start the timer</div>
</li>
</ul>
<a name="loadBall-model.strategies.IUpdateStrategy-model.paint.strategies.IPaintStrategy-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>loadBall</h4>
<pre>public&nbsp;void&nbsp;loadBall(<a href="../model/strategies/IUpdateStrategy.html" title="interface in model.strategies">IUpdateStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;strategy,
                     <a href="../model/paint/strategies/IPaintStrategy.html" title="interface in model.paint.strategies">IPaintStrategy</a>&nbsp;paintStrat)</pre>
<div class="block">The following method load a Ball object into the dispatcher with a selected strategy. 
 This method initial the Ball object with a random color, a random radius, a random initial location,
 and a random velocity.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategy</code> - An IUpdateStrategy object that describe the behavior of the Ball object</dd>
<dd><code>paintStrat</code> - An IPaintStrategy object that describe the paint strategy</dd>
</dl>
</li>
</ul>
<a name="update-java.awt.Graphics-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>update</h4>
<pre>public&nbsp;void&nbsp;update(java.awt.Graphics&nbsp;g)</pre>
<div class="block">This is the method that is called by the view's adapter to the model, i.e. is
 called by IView2ModelAdapter.paint(). This method will update the balls's
 painted locations by painting all the balls onto the given Graphics object.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g</code> - The Graphics object from the view's paintComponent() call.</dd>
</dl>
</li>
</ul>
<a name="clearBalls--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clearBalls</h4>
<pre>public&nbsp;void&nbsp;clearBalls()</pre>
<div class="block">Clear all the balls from the canvas, delete them from the observers.</div>
</li>
</ul>
<a name="makeStrategyFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeStrategyFac</h4>
<pre>public&nbsp;<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;makeStrategyFac(java.lang.String&nbsp;className)</pre>
<div class="block">This is the method that creates the factory that is able to generate make a strategy with the 
 designated strategy class name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>className</code> - A string that is the fully qualified class name of the desired
            object.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An instance of a strategy factory.</dd>
</dl>
</li>
</ul>
<a name="combineStrategyFacs-model.IStrategyFac-model.IStrategyFac-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineStrategyFacs</h4>
<pre>public&nbsp;<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;combineStrategyFacs(<a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;stratFac1,
                                                  <a href="../model/IStrategyFac.html" title="interface in model">IStrategyFac</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;stratFac2)</pre>
<div class="block">This is the method that creates the factory that can make a strategy which is the combination of 
 two other strategies.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>stratFac1</code> - The factory of the first strategy.</dd>
<dd><code>stratFac2</code> - THe factory of the second strategy.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An instance of a strategy factory.</dd>
</dl>
</li>
</ul>
<a name="getSwithcerStrategy--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSwithcerStrategy</h4>
<pre>public&nbsp;<a href="../model/strategies/SwitcherStrategy.html" title="class in model.strategies">SwitcherStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;getSwithcerStrategy()</pre>
<div class="block">A getter for the current switcher ball strategy.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The current switcher ball strategy.</dd>
</dl>
</li>
</ul>
<a name="switchSwitcherStrategy-model.strategies.IUpdateStrategy-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>switchSwitcherStrategy</h4>
<pre>public&nbsp;void&nbsp;switchSwitcherStrategy(<a href="../model/strategies/IUpdateStrategy.html" title="interface in model.strategies">IUpdateStrategy</a>&lt;<a href="../model/IBallCmd.html" title="interface in model">IBallCmd</a>&gt;&nbsp;strategy)</pre>
<div class="block">A method to switch the strategy of all existing switcher balls.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>strategy</code> - The strategy for the switcher balls to switch.</dd>
</dl>
</li>
</ul>
<a name="fixName-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fixName</h4>
<pre>public&nbsp;java.lang.String&nbsp;fixName(java.lang.String&nbsp;classname)</pre>
<div class="block">A method to transform the abbreviate class name of a strategy to its fully qualified class name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classname</code> - The String that represent the abbreviate class name.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A String object that represent the fully qualified class name.</dd>
</dl>
</li>
</ul>
<a name="makePaintStratFac-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makePaintStratFac</h4>
<pre>public&nbsp;<a href="../model/IPaintStrategyFac.html" title="interface in model">IPaintStrategyFac</a>&nbsp;makePaintStratFac(java.lang.String&nbsp;className)</pre>
<div class="block">This is the method that creates the factory that is able to generate make a paint strategy with the 
 designated strategy class name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>className</code> - A string that is the fully qualified class name of the desired
            object.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>An instance of a paint strategy factory.</dd>
</dl>
</li>
</ul>
<a name="fixPaintName-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>fixPaintName</h4>
<pre>public&nbsp;java.lang.String&nbsp;fixPaintName(java.lang.String&nbsp;className)</pre>
<div class="block">A method to transform the abbreviate class name of a paint strategy to its fully qualified class name.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>className</code> - The String that represent the abbreviate class name.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A String object that represent the fully qualified class name.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/BallModel.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../model/IBallCmd.html" title="interface in model"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?model/BallModel.html" target="_top">Frames</a></li>
<li><a href="BallModel.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
